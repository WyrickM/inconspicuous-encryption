[{"/home/mwyrick/security-project/inconspicuous-encryption/src/index.tsx":"1","/home/mwyrick/security-project/inconspicuous-encryption/src/reportWebVitals.ts":"2","/home/mwyrick/security-project/inconspicuous-encryption/src/App.tsx":"3","/home/mwyrick/security-project/inconspicuous-encryption/src/navigatoin.ts":"4","/home/mwyrick/security-project/inconspicuous-encryption/src/Encode.tsx":"5","/home/mwyrick/security-project/inconspicuous-encryption/src/Home.tsx":"6","/home/mwyrick/security-project/inconspicuous-encryption/src/Decode.tsx":"7"},{"size":595,"mtime":1633812613172,"results":"8","hashOfConfig":"9"},{"size":425,"mtime":1633807433499,"results":"10","hashOfConfig":"9"},{"size":3255,"mtime":1633844314530,"results":"11","hashOfConfig":"9"},{"size":248,"mtime":1633813424492,"results":"12","hashOfConfig":"9"},{"size":2091,"mtime":1633844689610,"results":"13","hashOfConfig":"9"},{"size":528,"mtime":1633840131490,"results":"14","hashOfConfig":"9"},{"size":1917,"mtime":1633843376080,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1kfzde2",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"18"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"18"},"/home/mwyrick/security-project/inconspicuous-encryption/src/index.tsx",[],["34","35"],"/home/mwyrick/security-project/inconspicuous-encryption/src/reportWebVitals.ts",[],"/home/mwyrick/security-project/inconspicuous-encryption/src/App.tsx",["36"],"import React, { FC } from 'react';\nimport {Link, Redirect, Route, Switch, useLocation } from \"react-router-dom\";\nimport { Layout, Menu, Typography } from 'antd';\nimport * as Navigation from './navigatoin';\nimport './App.css';\nimport Home from './Home';\nimport Encrypt from './Encode';\nimport Decrypt from './Decode';\n\n\n\nconst App = () => {\n  const location = useLocation();\n  const title = \"Inconspicuous Encryption\";\n\n  return (\n    <>\n        <Layout className=\"App\" style={{ height: \"100%\" }}>\n          <Layout.Sider \n            style={{ \n              background:\"#11274c\",\n            }}>\n            <Typography style={{width:\"110%\"}}>\n\n              <Typography.Title\n                level={4}\n                style={{\n                    margin: 25,\n                    color:\"white\",\n                    background:\"#11274c\",\n                    fontSize:\"x-large\",\n                  }}\n                >\n                {title}\n              </Typography.Title>\n            </Typography>\n            <Menu\n              mode=\"inline\"\n              selectedKeys={selectedMenuKeys(location.pathname)}\n              style={{\n                background:\"#11274c\",\n                minHeight: \"90vh\",\n                width:\"100.5%\"\n              }}\n            >\n              <Menu.Item\n                key={Navigation.HOME}\n                className=\"customclass\"\n              >\n                <Link \n                  to={Navigation.HOME}\n                  style={{color:\"white\", fontSize:\"large\"}}\n                >\n                  Home\n                </Link>\n              </Menu.Item>\n              <Menu.Item\n                key={Navigation.ENCRYPT}\n                className=\"customclass\"\n              >\n                <Link\n                  to={Navigation.ENCRYPT}\n                  style={{color:\"white\", fontSize:\"large\"}}\n                >\n                  Encrypt\n                </Link>\n              </Menu.Item>\n              <Menu.Item\n                key={Navigation.DECRYPT}\n                className=\"customclass\"\n              >\n                <Link \n                  to={Navigation.DECRYPT}\n                  style={{color:\"white\", fontSize:\"large\"}}\n                >\n                  Decrypt\n                </Link>\n              </Menu.Item>\n            </Menu>\n          </Layout.Sider>\n          <div className=\"main-content\">\n            <Switch>\n              <Route\n                path={Navigation.HOME}\n                component={Home}\n              />\n              <Route\n                path={Navigation.ENCRYPT}\n                component={Encrypt}\n              />\n              <Route\n                path={Navigation.DECRYPT}\n                component={Decrypt}\n              />\n              <Redirect\n                from=\"/\"\n                to={Navigation.HOME}\n              />\n            </Switch>\n          </div>\n        </Layout>\n    </>\n  );\n}\n\nfunction selectedMenuKeys(pathname: string): string[] {\n  if (pathname.startsWith(Navigation.HOME)) {\n    return [Navigation.HOME];\n  }\n  if (pathname.startsWith(Navigation.ENCRYPT)) {\n    return [Navigation.ENCRYPT];\n  }\n  if (pathname.startsWith(Navigation.DECRYPT)) {\n    return [Navigation.DECRYPT];\n  }\n  return [];\n}\n\nexport default App;\n","/home/mwyrick/security-project/inconspicuous-encryption/src/navigatoin.ts",[],"/home/mwyrick/security-project/inconspicuous-encryption/src/Encode.tsx",["37","38","39","40","41"],"/home/mwyrick/security-project/inconspicuous-encryption/src/Home.tsx",["42","43","44","45"],"import { Alert, Card, Col, Empty, PageHeader, Row } from \"antd\";\nimport * as React from \"react\";\nimport './App.css';\n\nconst Home = () => {\n\n    return (\n        <>\n            <PageHeader title=\"Home\">\n                <Alert\n                    message=\"Caution!\"\n                    description={\n                        <div>\n                            This is a test\n                        </div>\n                    }               \n                />\n            </PageHeader>\n        </>\n    );\n};\n\nexport default Home;\n","/home/mwyrick/security-project/inconspicuous-encryption/src/Decode.tsx",["46","47","48","49","50","51","52"],"import { Button, Card, Form, Input, message, PageHeader, Upload } from \"antd\";\nimport * as React from \"react\";\nimport { InboxOutlined } from '@ant-design/icons';\nimport { info } from \"console\";\nimport { resolve } from \"path\";\nimport { rejects } from \"assert\";\nimport { file } from \"@babel/types\";\n\nconst {Dragger} = Upload\n\nconst Decrypt = () => {\n\n    const props = {\n        name: 'file',\n        multiple: false,\n        previewVisible: true,\n        onChange(info: any) {\n            const {status} = info.file;\n            if(status !== 'uploading') {\n                console.log(info.file, info.fileList);\n            }\n            if(status === 'done')\n            {\n                message.success('${info.file.name} file upload failed.');\n            }\n        },\n        onDrop(e: any) {\n            console.log('Dropped files', e.dataTransfer.files);\n        },\n    };\n\n    return (\n        <>\n            <PageHeader title=\"Decrypt\" className=\"main-content\">\n                <Card>\n                    <Dragger {...props}>\n                        <p className=\"ant-upload-drag-icon\">\n                            <InboxOutlined />\n                        </p>\n                        <p className=\"ant-upload-text\">\n                            Click or drag image to this area to upload.\n                        </p>\n                        <p className=\"ant-upload-hint\">\n                            Support for a single upload. Supported files include .png, .jpg, or .pdf\n                        </p>\n                    </Dragger>\n                    <div\n                        style={{paddingTop: 15}}\n                    >\n                    <Button \n                        type=\"primary\"\n                    >\n                        Decrypt\n                    </Button>\n                    </div>\n                </Card>\n            </PageHeader>\n        </>\n    );\n};\n\nexport default Decrypt;\n",{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","severity":1,"message":"58","line":1,"column":17,"nodeType":"59","messageId":"60","endLine":1,"endColumn":19},{"ruleId":"57","severity":1,"message":"61","line":4,"column":10,"nodeType":"59","messageId":"60","endLine":4,"endColumn":14},{"ruleId":"57","severity":1,"message":"62","line":5,"column":10,"nodeType":"59","messageId":"60","endLine":5,"endColumn":17},{"ruleId":"57","severity":1,"message":"63","line":6,"column":10,"nodeType":"59","messageId":"60","endLine":6,"endColumn":17},{"ruleId":"57","severity":1,"message":"64","line":7,"column":10,"nodeType":"59","messageId":"60","endLine":7,"endColumn":14},{"ruleId":"65","severity":1,"message":"66","line":24,"column":33,"nodeType":"67","messageId":"68","endLine":24,"endColumn":72},{"ruleId":"57","severity":1,"message":"69","line":1,"column":17,"nodeType":"59","messageId":"60","endLine":1,"endColumn":21},{"ruleId":"57","severity":1,"message":"70","line":1,"column":23,"nodeType":"59","messageId":"60","endLine":1,"endColumn":26},{"ruleId":"57","severity":1,"message":"71","line":1,"column":28,"nodeType":"59","messageId":"60","endLine":1,"endColumn":33},{"ruleId":"57","severity":1,"message":"72","line":1,"column":47,"nodeType":"59","messageId":"60","endLine":1,"endColumn":50},{"ruleId":"57","severity":1,"message":"73","line":1,"column":24,"nodeType":"59","messageId":"60","endLine":1,"endColumn":28},{"ruleId":"57","severity":1,"message":"74","line":1,"column":30,"nodeType":"59","messageId":"60","endLine":1,"endColumn":35},{"ruleId":"57","severity":1,"message":"61","line":4,"column":10,"nodeType":"59","messageId":"60","endLine":4,"endColumn":14},{"ruleId":"57","severity":1,"message":"62","line":5,"column":10,"nodeType":"59","messageId":"60","endLine":5,"endColumn":17},{"ruleId":"57","severity":1,"message":"63","line":6,"column":10,"nodeType":"59","messageId":"60","endLine":6,"endColumn":17},{"ruleId":"57","severity":1,"message":"64","line":7,"column":10,"nodeType":"59","messageId":"60","endLine":7,"endColumn":14},{"ruleId":"65","severity":1,"message":"66","line":24,"column":33,"nodeType":"67","messageId":"68","endLine":24,"endColumn":72},"no-native-reassign",["75"],"no-negated-in-lhs",["76"],"@typescript-eslint/no-unused-vars","'FC' is defined but never used.","Identifier","unusedVar","'info' is defined but never used.","'resolve' is defined but never used.","'rejects' is defined but never used.","'file' is defined but never used.","no-template-curly-in-string","Unexpected template string expression.","Literal","unexpectedTemplateExpression","'Card' is defined but never used.","'Col' is defined but never used.","'Empty' is defined but never used.","'Row' is defined but never used.","'Form' is defined but never used.","'Input' is defined but never used.","no-global-assign","no-unsafe-negation"]