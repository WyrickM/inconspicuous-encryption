{"ast":null,"code":"var _jsxFileName = \"/home/mwyrick/security-project/inconspicuous-encryption/src/Encode.tsx\";\nimport { Button, Card, Form, Input, message, PageHeader, Upload } from \"antd\";\nimport * as React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst {\n  Dragger\n} = Upload;\n\nconst Encrypt = () => {\n  const props = {\n    name: 'file',\n    multiple: false,\n\n    onChange(info) {\n      const {\n        status\n      } = info.file;\n\n      if (status !== 'uploading') {\n        console.log(info.file, info.fileList);\n      }\n\n      if (status === 'done') {\n        message.success();\n      }\n    }\n\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(PageHeader, {\n      title: \"Encrypt\",\n      className: \"main-content\",\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n            label: \"Message\",\n            name: \"message\",\n            children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            children: \"Encrypt\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_c = Encrypt;\nexport default Encrypt;\n\nvar _c;\n\n$RefreshReg$(_c, \"Encrypt\");","map":{"version":3,"sources":["/home/mwyrick/security-project/inconspicuous-encryption/src/Encode.tsx"],"names":["Button","Card","Form","Input","message","PageHeader","Upload","React","Dragger","Encrypt","props","name","multiple","onChange","info","status","file","console","log","fileList","success"],"mappings":";AAAA,SAAgBA,MAAhB,EAAwBC,IAAxB,EAA8BC,IAA9B,EAAoCC,KAApC,EAA2CC,OAA3C,EAAoDC,UAApD,EAAgEC,MAAhE,QAA8E,MAA9E;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;;;AAIA,MAAM;AAACC,EAAAA;AAAD,IAAYF,MAAlB;;AAEA,MAAMG,OAAO,GAAG,MAAM;AAElB,QAAMC,KAAK,GAAG;AACVC,IAAAA,IAAI,EAAE,MADI;AAEVC,IAAAA,QAAQ,EAAE,KAFA;;AAGVC,IAAAA,QAAQ,CAACC,IAAD,EAAO;AACX,YAAM;AAACC,QAAAA;AAAD,UAAWD,IAAI,CAACE,IAAtB;;AACA,UAAGD,MAAM,KAAK,WAAd,EAA2B;AACvBE,QAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAI,CAACE,IAAjB,EAAuBF,IAAI,CAACK,QAA5B;AACH;;AACD,UAAGJ,MAAM,KAAK,MAAd,EACA;AACIX,QAAAA,OAAO,CAACgB,OAAR;AACH;AACJ;;AAZS,GAAd;AAeA,sBACI;AAAA,2BACI,QAAC,UAAD;AAAY,MAAA,KAAK,EAAC,SAAlB;AAA4B,MAAA,SAAS,EAAC,cAAtC;AAAA,6BACI,QAAC,IAAD;AAAA,+BAEI,QAAC,IAAD;AAAA,kCACI,QAAC,IAAD,CAAM,IAAN;AACI,YAAA,KAAK,EAAC,SADV;AAEI,YAAA,IAAI,EAAC,SAFT;AAAA,mCAII,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,kBADJ,eAOI,QAAC,MAAD;AAAQ,YAAA,IAAI,EAAC,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AAkBH,CAnCD;;KAAMX,O;AAqCN,eAAeA,OAAf","sourcesContent":["import { Alert, Button, Card, Form, Input, message, PageHeader, Upload } from \"antd\";\nimport * as React from \"react\";\nimport { InboxOutlined } from '@ant-design/icons';\nimport { info } from \"console\";\n\nconst {Dragger} = Upload\n\nconst Encrypt = () => {\n\n    const props = {\n        name: 'file',\n        multiple: false,\n        onChange(info) {\n            const {status} = info.file;\n            if(status !== 'uploading') {\n                console.log(info.file, info.fileList);\n            }\n            if(status === 'done')\n            {\n                message.success()\n            }\n        }\n    }\n\n    return (\n        <>\n            <PageHeader title=\"Encrypt\" className=\"main-content\">\n                <Card>\n\n                    <Form>\n                        <Form.Item\n                            label=\"Message\"\n                            name=\"message\"\n                        >\n                            <Input />\n                        </Form.Item>\n                        <Button type=\"primary\">Encrypt</Button>\n                    </Form>\n                </Card>\n            </PageHeader>\n        </>\n    );\n};\n\nexport default Encrypt;\n"]},"metadata":{},"sourceType":"module"}