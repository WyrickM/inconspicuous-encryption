{"ast":null,"code":"var _jsxFileName = \"/home/mwyrick/security-project/inconspicuous-encryption/src/Encode.tsx\";\nimport { Button, Card, Form, Input, PageHeader, Upload } from \"antd\";\nimport * as React from \"react\";\nimport { InboxOutlined } from '@ant-design/icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst {\n  Dragger\n} = Upload;\n\nconst Encrypt = () => {\n  // const props = {\n  //     name: 'file',\n  //     multiple: false,\n  //     previewVisible: true,\n  //     onChange(info) {\n  //         const {status} = info.file;\n  //         if(status !== 'uploading') {\n  //             console.log(info.file, info.fileList);\n  //         }\n  //         if(status === 'done')\n  //         {\n  //             message.success('${info.file.name} file upload failed.');\n  //         }\n  //     },\n  //     onDrop(e) {\n  //         console.log('Dropped files', e.dataTransfer.files);\n  //     },\n  // };\n  handleCancel = () => this.setState;\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(PageHeader, {\n      title: \"Encrypt\",\n      className: \"main-content\",\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(Dragger, { ...props,\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"ant-upload-drag-icon\",\n              children: /*#__PURE__*/_jsxDEV(InboxOutlined, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 38,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"ant-upload-text\",\n              children: \"Click or drag file to this area to upload.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"ant-upload-hint\",\n              children: \"Support for a single upload. Supported files include .png, .jpg, or .pdf\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 25\n          }, this), \", mountNode,\", /*#__PURE__*/_jsxDEV(Form.Item, {\n            label: \"Message\",\n            name: \"message\",\n            children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            children: \"Encrypt\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_c = Encrypt;\nexport default Encrypt;\n\nvar _c;\n\n$RefreshReg$(_c, \"Encrypt\");","map":{"version":3,"sources":["/home/mwyrick/security-project/inconspicuous-encryption/src/Encode.tsx"],"names":["Button","Card","Form","Input","PageHeader","Upload","React","InboxOutlined","Dragger","Encrypt","handleCancel","setState","props"],"mappings":";AAAA,SAAgBA,MAAhB,EAAwBC,IAAxB,EAA8BC,IAA9B,EAAoCC,KAApC,EAA2DC,UAA3D,EAAuEC,MAAvE,QAAqF,MAArF;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAASC,aAAT,QAA8B,mBAA9B;;;AAGA,MAAM;AAACC,EAAAA;AAAD,IAAYH,MAAlB;;AAEA,MAAMI,OAAO,GAAG,MAAM;AAElB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEAC,EAAAA,YAAY,GAAG,MAAM,KAAKC,QAA1B;;AAEA,sBACI;AAAA,2BACI,QAAC,UAAD;AAAY,MAAA,KAAK,EAAC,SAAlB;AAA4B,MAAA,SAAS,EAAC,cAAtC;AAAA,6BACI,QAAC,IAAD;AAAA,+BACI,QAAC,IAAD;AAAA,kCACI,QAAC,OAAD,OAAaC,KAAb;AAAA,oCACI;AAAG,cAAA,SAAS,EAAC,sBAAb;AAAA,qCACI,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBADJ,eAII;AAAG,cAAA,SAAS,EAAC,iBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJJ,eAOI;AAAG,cAAA,SAAS,EAAC,iBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,+BAaI,QAAC,IAAD,CAAM,IAAN;AACI,YAAA,KAAK,EAAC,SADV;AAEI,YAAA,IAAI,EAAC,SAFT;AAAA,mCAII,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,kBAbJ,eAmBI,QAAC,MAAD;AAAQ,YAAA,IAAI,EAAC,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAnBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AA6BH,CApDD;;KAAMH,O;AAsDN,eAAeA,OAAf","sourcesContent":["import { Alert, Button, Card, Form, Input, message, Modal, PageHeader, Upload } from \"antd\";\nimport * as React from \"react\";\nimport { InboxOutlined } from '@ant-design/icons';\nimport { info } from \"console\";\n\nconst {Dragger} = Upload\n\nconst Encrypt = () => {\n\n    // const props = {\n    //     name: 'file',\n    //     multiple: false,\n    //     previewVisible: true,\n    //     onChange(info) {\n    //         const {status} = info.file;\n    //         if(status !== 'uploading') {\n    //             console.log(info.file, info.fileList);\n    //         }\n    //         if(status === 'done')\n    //         {\n    //             message.success('${info.file.name} file upload failed.');\n    //         }\n    //     },\n    //     onDrop(e) {\n    //         console.log('Dropped files', e.dataTransfer.files);\n    //     },\n    // };\n\n    handleCancel = () => this.setState\n\n    return (\n        <>\n            <PageHeader title=\"Encrypt\" className=\"main-content\">\n                <Card>\n                    <Form>\n                        <Dragger {...props}>\n                            <p className=\"ant-upload-drag-icon\">\n                                <InboxOutlined />\n                            </p>\n                            <p className=\"ant-upload-text\">\n                                Click or drag file to this area to upload.\n                            </p>\n                            <p className=\"ant-upload-hint\">\n                                Support for a single upload. Supported files include .png, .jpg, or .pdf\n                            </p>\n                        </Dragger>,\n                        mountNode,\n                        <Form.Item\n                            label=\"Message\"\n                            name=\"message\"\n                        >\n                            <Input />\n                        </Form.Item>\n                        <Button type=\"primary\">Encrypt</Button>\n                    </Form>\n                </Card>\n            </PageHeader>\n        </>\n    );\n};\n\nexport default Encrypt;\n"]},"metadata":{},"sourceType":"module"}